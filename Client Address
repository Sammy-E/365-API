let axios = require("axios");

exports.main = async (event, callback) => {
  /*****
    Event is everything within the workflows and callback is the external part API
  *****/
 
  
  const EMAIL = event.inputFields['email'];
  const RECORD_ID = event.inputFields['hs_object_id'];
  let OWNER = event.inputFields['hubspot_owner_id'];
  const currentDate = new Date();
  const isoString = currentDate.toISOString();
  const fName = event.inputFields['firstname'];
  const lName = event.inputFields['lastname'];
  const name = `${fName} ${lName}`;
  const referrer = event.inputFields['referrer'];
  const phone = event.inputFields['phone'];
  const city = event.inputFields['city'];
  const country = event.inputFields['country'];
  
  //IF contact doesn't have an owner, it assigns myself (Coke) as the owner which is used later for contact and note owner
  if (OWNER === '' || OWNER === undefined) {
    OWNER = 1692194549; 
	}
  
  
  const NOTE_TEXT = 
        `<b>Name:</b> ${name} <br>
        <b>Email:</b> ${EMAIL} <br>
        <b>Referrer:</b> ${referrer} <br>
        <b>Phone number:</b> ${phone} <br>
        <b>Lives in:</b> ${city}, ${country}<br><br>`;
  

  let data = { 
    "properties": {
      "hs_timestamp": `${isoString}`,
      "hs_note_body": `${NOTE_TEXT}`,
      "hubspot_owner_id": `${OWNER}`
    },
    "associations": [
      {
        "to":{
          "id": RECORD_ID
        },
        "types":[
          {
            "associationCategory":"HUBSPOT_DEFINED",
            "associationTypeId":202
          }]
      }]

  }

try {
  const response = await axios.post('https://api.hubapi.com/crm/v3/objects/notes', data, {
    headers: {
      'Content-Type': 'application/json',
      'authorization': `Bearer ${process.env.note}`
    },

  });
  
  await axios.patch(`https://api.hubapi.com/crm/v3/objects/contacts/${RECORD_ID}`, {
        properties: {
          hubspot_owner_id: OWNER 
        }
      }, {
        headers: {
          'Content-Type': 'application/json',
          'authorization': `Bearer ${process.env.note}` // Make sure this token has the necessary permissions
        }
      });
  
  
  
  const result = response.data;
  console.log(result);
  console.log(OWNER);
}
  catch (error) {
  console.log('Error posting note :', error.response.data);
}
  
  
  /*****
    Use the callback function to output data that can be used in later actions in your workflow.
  *****/
  callback({
    outputFields: {
      
    }
  });
}
